{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","reset","onLogin","authOps","login","className","onSubmit","e","preventDefault","name","type","onChange","currentTarget","pattern"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,mFIyDvFC,UA1DG,WAAO,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEUF,mBAAS,IAFnB,mBAEfG,EAFe,KAELC,EAFK,KAIhBC,EAAWC,cAgBXC,EAAQ,WACZL,EAAS,IACTE,EAAY,KAGRI,EAAU,iBAAM,CACpBH,EAASI,IAAQC,MAAM,CAAET,QAAOE,gBAGlC,OACE,sBAAKQ,UAAU,MAAf,UACE,uCACA,uBAAMC,SAlBW,SAACC,GACpBA,EAAEC,iBACFN,EAAQ,CAAEP,QAAOE,aACjBI,KAeE,UACE,0CAEE,uBACEQ,KAAK,QACLC,KAAK,QACLtB,MAAOO,EACPgB,SAjCgB,SAACJ,GACzBX,EAASW,EAAEK,cAAcxB,QAiCjByB,QAAQ,iDAGZ,6CAEE,uBACEJ,KAAK,WACLC,KAAK,WACLtB,MAAOS,EACPc,SAvCmB,SAACJ,GAC5BT,EAAYS,EAAEK,cAAcxB,aAyCxB,wBAAQsB,KAAK,SAAb","file":"static/js/3.0be9f64c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOps from \"../redux/auth/auth-operations.js\";\n\nconst LoginView = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch()\n\n  const handleChangeEmail = (e) => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const handleChangePassword = (e) => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onLogin({ email, password });\n    reset();\n  };\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const onLogin = () => [\n    dispatch(authOps.login({ email, password }))\n  ]\n\n  return (\n    <div className=\"app\">\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email\n          <input\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={handleChangeEmail}\n            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n        </label>\n        <label>\n          Password\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handleChangePassword}\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginView\n\n"],"sourceRoot":""}