{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/auth/aut-selectors.js","components/NavBar/NavBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","state","auth","isLogin","user","name","NavBar","isAuth","useSelector","authSelectors","username","dispatch","useDispatch","className","activeClassName","to","style","margin","marginRight","type","onClick","authOperations","logout","connect","Component","component","redirectTo","routeProps","render","props","routesProps","restricted","HomeView","lazy","PhonebookView","RegisterView","LoginView","mapDispatchToProps","onGetCurrentUser","getCurrentUser","useEffect","fallback","textAlign","paddingTop","path","contacts","createReducer","payload","filter","contact","id","loading","combineReducers","initialState","email","authActions","registerSuccess","_","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerError","loginError","getCurrentUserError","token","error","logoutError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","registerRequest","post","response","data","message","login","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.58790107.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"phonebook/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"phonebook/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"phonebook/fetchContactError\");\n\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\nexport const addContactError = createAction(\"phonebook/addContactError\");\n\nexport const deleteContactRequest = createAction(\"phonebook/deleteContactRequest\");\nexport const deleteContactSuccess = createAction(\"phonebook/deleteContactSuccess\");\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\n\n\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\n","const getIsAuth = state => state.auth.isLogin \n\nconst getUsername = state => state.auth.user.name\n\n\nexport default {getIsAuth, getUsername}","import { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/aut-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport \"./styles.css\";\n\nconst NavBar = () => {\n  const isAuth = useSelector(authSelectors.getIsAuth)\n  const username = useSelector(authSelectors.getUsername)\n\n  const dispatch = useDispatch()\n\n  const onLogout = () => {\n    dispatch(authOperations.logout())\n  }\n  return (\n    <header>\n      <nav>\n        <div>\n          <NavLink\n            className=\"nav--btn\"\n            activeClassName=\"nav--btn__active\"\n            to=\"/home\"\n          >\n            HOME\n          </NavLink>\n          {isAuth && (\n            <NavLink\n              className=\"nav--btn\"\n              activeClassName=\"nav--btn__active\"\n              to=\"/contacts\"\n            >\n              PHONEBOOK\n            </NavLink>\n          )}\n        </div>\n\n        <div className=\"user-nav\">\n          {isAuth ? (\n            <>\n              <span style={{ margin: 0, marginRight: 10 }}>\n                Welcome, {username}!\n              </span>\n              <button type=\"button\" onClick={onLogout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <NavLink\n                to=\"/register\"\n                className=\"user-btn\"\n                activeClassName=\"user-btn-active\"\n              >\n                Register\n              </NavLink>\n              <NavLink\n                to=\"/login\"\n                className=\"user-btn\"\n                activeClassName=\"user-btn-active\"\n              >\n                Login\n              </NavLink>\n            </>\n          )}\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar\n","import { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"../redux/auth/aut-selectors\";\n\nconst PrivateRoute = ({ component: Component, isAuth, redirectTo, ...routeProps }) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuth ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuth: authSelectors.getIsAuth(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport authSelectors from \"../redux/auth/aut-selectors\";\n\nconst PublicRoute = ({ component: Component, isAuth, redirectTo, ...routesProps }) => (\n  <Route\n    {...routesProps}\n    render={(props) =>\n      isAuth && routesProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n    isAuth: authSelectors.getIsAuth(state)\n})\n\n\n\nexport default connect(mapStateToProps)(PublicRoute)","import { lazy, Suspense, useEffect } from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\n// import HomeView from \"./views/HomeView\";\n// import PhonebookView from \"./views/PhonebookView\";\n// import RegisterView from \"./views/RegisterView\";\n// import LoginView from \"./views/LoginView\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst PhonebookView = lazy(() => import(\"./views/PhonebookView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\n\nconst App = ({ onGetCurrentUser }) => {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, [onGetCurrentUser]);\n\n  return (\n    <>\n      <NavBar />\n      <Suspense\n        fallback={\n          <div style={{ textAlign: \"center\", paddingTop: 150 }}>\n            <Loader type=\"Circles\" />\n          </div>\n        }\n      >\n        <Switch>\n          <Route path=\"/home\" component={HomeView} />\n          <PrivateRoute\n            path=\"/contacts\"\n            component={PhonebookView}\n            redirectTo=\"/login\"\n          />\n          <PublicRoute\n            path=\"/register\"\n            component={RegisterView}\n            restricted\n            redirectTo=\"/home\"\n          />\n          <PublicRoute\n            path=\"/login\"\n            component={LoginView}\n            restricted\n            redirectTo=\"/contacts\"\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-actions\";\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst isLogin = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.logoutSuccess]: () => false,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => \"\",\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  isLogin,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\nimport authReducer from \"./auth/auth-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store.store}>\n        <PersistGate persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logout = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if(!persistedToken){\n    return\n  }\n\n  token.set(persistedToken)\n\n  dispatch(authActions.getCurrentUserRequest())\n\n  try {\n    const response = await axios.get('/users/current')\n    dispatch(authActions.getCurrentUserSuccess(response.data))\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message))\n  }\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction('auth/registerRequest')\nconst registerSuccess = createAction('auth/registerSuccess')\nconst registerError = createAction('auth/registerError')\n\nconst loginRequest = createAction('auth/loginRequest')\nconst loginSuccess = createAction('auth/loginSuccess')\nconst loginError = createAction('auth/loginError')\n\nconst logoutRequest = createAction('auth/logoutRequest')\nconst logoutSuccess = createAction('auth/logoutSuccess')\nconst logoutError = createAction('auth/logoutError')\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest')\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess')\nconst getCurrentUserError = createAction('auth/getCurrentUserError')\n\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError\n}\n"],"sourceRoot":""}