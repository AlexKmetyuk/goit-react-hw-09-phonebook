{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Phonebook/PhonebookForm.jsx","components/Phonebook/PhonebookList.jsx","components/Phonebook/Filter.jsx","views/PhonebookView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","dispatch","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","error","fetchContactError","message","contact","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","phonebook","contacts","getFilter","filter","createSelector","normalizedContactNames","toString","toLowerCase","name","includes","PhonebookForm","useDispatch","useState","setName","number","setNumber","useSelector","phonebookSelectors","handleCheckUniqueContact","check","find","alert","onSubmit","phonebookOperations","reset","className","e","preventDefault","type","pattern","title","required","onChange","currentTarget","PhonebookList","useEffect","allContacts","getVisibleContacts","map","onClick","Filter","setValue","changeFilter","PhonebookView"],"mappings":"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","file":"static/js/4.568274c9.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./phonebook-actions\";\n\n// axios.defaults.baseURL = \"http://localhost:4444\";.message\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n  return axios\n    .get(\"/contacts\")\n    .then(({data}) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error.message)));\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n  return axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  return axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error.message)));\n};\n\nexport default { fetchContacts ,addContact, deleteContact };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = (state) => state.phonebook.contacts;\n\nconst getFilter = (state) => state.phonebook.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedContactNames = filter.toString().toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedContactNames)\n    );\n  }\n);\n\nexport default { getContacts, getFilter, getVisibleContacts };\n","import { useState } from \"react\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\nimport phonebookSelectors from \"../../redux/phonebook/phonebook-selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst PhonebookForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(phonebookSelectors.getContacts);\n\n  const handleChangeName = (e) => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = (e) => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (handleCheckUniqueContact(name)) {\n      return;\n    }\n    onSubmit();\n    reset();\n  };\n\n  const handleCheckUniqueContact = (name) => {\n    const check = contacts.find((contact) => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert(\"Contact is already exist\");\n      return check;\n    }\n  };\n\n  const onSubmit = () => {\n    dispatch(phonebookOperations.addContact({ name, number }));\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={\"form\"} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;\n","import {  useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations.js\";\nimport phonebookSelectors from \"../../redux/phonebook/phonebook-selectors.js\";\n\nconst PhonebookList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(phonebookSelectors.getContacts);\n  const filter = useSelector(phonebookSelectors.getFilter)\n\n  const getVisibleContacts = (allContacts, filter) => {\n    const normalizedContactNames = filter.toString().toLowerCase();\n    return allContacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedContactNames)\n    );\n  };\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  const onRemove = (id) => {\n    dispatch(phonebookOperations.deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {getVisibleContacts(contacts, filter).map((contact) => (\n        <li key={contact.id}>\n          <p>\n            📱 {contact.name}: {contact.number}\n          </p>\n          <button\n            className=\"btnRemove\"\n            onClick={() => {\n              onRemove(contact.id);\n            }}\n          >\n            Remove\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\nexport default PhonebookList;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\n\nconst Filter = () => {\n  const [value, setValue] = useState('')\n\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    setValue(e.currentTarget.value)\n    dispatch(changeFilter(e.currentTarget.value))\n  };\n\n  return (\n    <label className={\"form\"}>\n      Find contacts by name\n      <input value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter\n","import PhonebookForm from \"../components/Phonebook/PhonebookForm\";\nimport PhonebookList from \"../components/Phonebook/PhonebookList\";\nimport Filter from \"../components/Phonebook/Filter\";\n\nconst PhonebookView = () => {\n  return (\n    <div className=\"app\">\n      <h1>Phonebook</h1>\n      <PhonebookForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <PhonebookList />{\" \"}\n    </div>\n  );\n};\n\nexport default PhonebookView;\n"],"sourceRoot":""}